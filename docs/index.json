{
  "api/InputManager.KeyboardState.html": {
    "href": "api/InputManager.KeyboardState.html",
    "title": "Class KeyboardState | InputManager.Net Documentation",
    "keywords": "Class KeyboardState Provides access to the asynchronous status of all virtual keys. Inheritance Object KeyboardState Inherited Members Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : InputManager Assembly : InputManager.dll Syntax public class KeyboardState Constructors | Improve this Doc View Source KeyboardState() Initializes a new KeyboardState object and updates the underlying buffer. Declaration public KeyboardState() Fields | Improve this Doc View Source MaxKeyValue The upper bound of a virtual key. Declaration public const int MaxKeyValue = 256 Field Value Type Description Int32 | Improve this Doc View Source MinKeyValue The lower bound of a virtual key. Declaration public const int MinKeyValue = 0 Field Value Type Description Int32 Properties | Improve this Doc View Source Item[Int32] Gets the bit field representing the status of a key. Declaration public byte this[int index] { get; } Parameters Type Name Description Int32 index A virtual key. Property Value Type Description Byte A 1 byte large bit field holding the status of a virtual key. | Improve this Doc View Source Item[Keys] Gets the key state of a specified key. Declaration public KeyStates this[Keys key] { get; } Parameters Type Name Description Keys key A virtual key. Property Value Type Description KeyStates The KeyStates of the specified key. Methods | Improve this Doc View Source Create() Instantiates a new KeyboardState object. Declaration public static KeyboardState Create() Returns Type Description KeyboardState A KeyboardState object. | Improve this Doc View Source Equals(KeyboardState) Returns a value indicating whether two specified instances of KeyboardState were created on the same thread. Declaration public bool Equals(KeyboardState value) Parameters Type Name Description KeyboardState value An object to compare to this instance. Returns Type Description Boolean true if value was created on the same thread; otherwise, false . | Improve this Doc View Source Equals(Object) Returns a value indicating whether this instance and a specified Object represent the same type and were created on the same thread. Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj The object to compare with this instance. Returns Type Description Boolean true if obj is a KeyboardState and was created on the same thread; otherwise, false . Overrides Object.Equals(Object) | Improve this Doc View Source GetHashCode() Returns the hash code for this instance. Declaration public override int GetHashCode() Returns Type Description Int32 A 32-bit signed integer hash code. Overrides Object.GetHashCode() | Improve this Doc View Source GetKeyState(Keys) Returns the asynchronous state of a virtual key. Declaration public KeyStates GetKeyState(Keys key) Parameters Type Name Description Keys key A virtual key code. Returns Type Description KeyStates The state of a virtual key code. | Improve this Doc View Source GetThreadStatic() Gets a cached and thread-static KeyboardState object which is unique for the calling thread and updates it. Declaration public static KeyboardState GetThreadStatic() Returns Type Description KeyboardState A KeyboardState object. | Improve this Doc View Source GetThreadStatic(Boolean) Gets a cached and thread-static KeyboardState object which is unique for the calling thread. Declaration public static KeyboardState GetThreadStatic(bool update) Parameters Type Name Description Boolean update Indicates whether the thread-static KeyboardState object should be updated before returning it. Returns Type Description KeyboardState A KeyboardState object. | Improve this Doc View Source IsFirstTimePressed(Keys) Determines whether a key is pressed for the first time and not held down. Declaration public bool IsFirstTimePressed(Keys key) Parameters Type Name Description Keys key A virtual key. Returns Type Description Boolean true if the virtual key is pressed for the first time and not held down; otherwise, false . | Improve this Doc View Source IsPressed(Keys) Determines whether a key is pressed. Declaration public bool IsPressed(Keys key) Parameters Type Name Description Keys key A virtual key. Returns Type Description Boolean true if the virtual key is pressed; otherwise, false . | Improve this Doc View Source IsToggled(Keys) Determines whether a key is toggled. Declaration public bool IsToggled(Keys key) Parameters Type Name Description Keys key A virtual key. Returns Type Description Boolean true if the virtual key is toggled; otherwise, false . | Improve this Doc View Source IsUp(Keys) Determines whether a key is not pressed or toggled. Declaration public bool IsUp(Keys key) Parameters Type Name Description Keys key A virtual key. Returns Type Description Boolean true if the virtual key is not pressed or toggled; otherwise, false . | Improve this Doc View Source ToString() Converts this KeyboardState structure to a human-readable string. Declaration public override string ToString() Returns Type Description String A string representation of this KeyboardState. Overrides Object.ToString() | Improve this Doc View Source Update() Updates the buffer holding the status of all virtual keys. Declaration public void Update() | Improve this Doc View Source WasPressed(Keys) Determines whether a key was pressed. Declaration public bool WasPressed(Keys key) Parameters Type Name Description Keys key A virtual key. Returns Type Description Boolean true if the virtual key was pressed; otherwise, false ."
  },
  "api/InputManager.KeyCodeConverter.html": {
    "href": "api/InputManager.KeyCodeConverter.html",
    "title": "Class KeyCodeConverter | InputManager.Net Documentation",
    "keywords": "Class KeyCodeConverter Provides methods to convert between strings and enums and aswell Windows Forms (Keys) and WPF (Key) enums. Inheritance Object KeyCodeConverter Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : InputManager Assembly : InputManager.dll Syntax public static class KeyCodeConverter Properties | Improve this Doc View Source Keys Gets a readonly enumeration of all Keys. Declaration public static IEnumerable<Keys> Keys { get; } Property Value Type Description IEnumerable < Keys > Methods | Improve this Doc View Source FormsKeyFromString(String) Turns the string representation of a Windows Forms Keys to a Windows Forms Keys enum value. Declaration public static Keys FormsKeyFromString(string value) Parameters Type Name Description String value The string representation of a Windows Forms Keys enum value. Returns Type Description Keys The Windows Forms Keys enum value. | Improve this Doc View Source FormsKeyToWPFKey(Keys) Converts a Windows Forms Keys enum value to a WPF Key enum value. Declaration public static Key FormsKeyToWPFKey(Keys key) Parameters Type Name Description Keys key A Windows Forms Keys enum value. Returns Type Description Key The WPF Key enum value. | Improve this Doc View Source ToInt(Keys) Converts a Windows Forms Keys to a signed integer. Declaration public static int ToInt(Keys key) Parameters Type Name Description Keys key A Windows Forms Keys. Returns Type Description Int32 The signed int value representing a WPF Keys. | Improve this Doc View Source ToInt(Key) Converts a WPF Key to a signed integer. Declaration public static int ToInt(Key key) Parameters Type Name Description Key key A WPF Key. Returns Type Description Int32 The signed int value representing a WPF Key. | Improve this Doc View Source ToString(Keys) Converts a Windows Forms Keys to a human readable string. Declaration public static string ToString(Keys key) Parameters Type Name Description Keys key A Windows Forms Keys enum value. Returns Type Description String The string this method generates. | Improve this Doc View Source ToString(Key) Converts a WPF Key to a human readable string. Declaration public static string ToString(Key key) Parameters Type Name Description Key key A WPF Key. Returns Type Description String The string this method generates. | Improve this Doc View Source WPFKeyFromString(String) Turns the string representation of a WPF Key to a WPF Key enum value. Declaration public static Key WPFKeyFromString(string value) Parameters Type Name Description String value The string representation of a WPF Key enum value. Returns Type Description Key The WPF Key enum value. | Improve this Doc View Source WPFKeyToFormsKey(Key) Converts a WPF Key enum value to a Windows Forms Keys enum value. Declaration public static Keys WPFKeyToFormsKey(Key key) Parameters Type Name Description Key key A WPF Key enum value. Returns Type Description Keys The Windows Forms Keys enum value."
  },
  "api/InputManager.AsyncInput.html": {
    "href": "api/InputManager.AsyncInput.html",
    "title": "Class AsyncInput | InputManager.Net Documentation",
    "keywords": "Class AsyncInput Provides methods to get the asynchronous state of a virtual key. Inheritance Object AsyncInput Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : InputManager Assembly : InputManager.dll Syntax public static class AsyncInput Fields | Improve this Doc View Source MaxKeyValue The upper bound of a virtual key. Declaration public const int MaxKeyValue = 256 Field Value Type Description Int32 | Improve this Doc View Source MinKeyValue The lower bound of a virtual key. Declaration public const int MinKeyValue = 0 Field Value Type Description Int32 Methods | Improve this Doc View Source GetKeyState(Keys) Returns the asynchronous state of a virtual key. Declaration public static KeyStates GetKeyState(Keys key) Parameters Type Name Description Keys key A virtual key code. Returns Type Description KeyStates The state of a virtual key code. | Improve this Doc View Source IsFirstTimePressed(Keys) Determines whether a key is pressed for the first time and not held down. Declaration public static bool IsFirstTimePressed(Keys key) Parameters Type Name Description Keys key A virtual key. Returns Type Description Boolean true if the virtual key is pressed for the first time and not held down; otherwise, false . | Improve this Doc View Source IsPressed(Keys) Determines whether a key is pressed. Declaration public static bool IsPressed(Keys key) Parameters Type Name Description Keys key A virtual key. Returns Type Description Boolean true if the virtual key is pressed; otherwise, false . | Improve this Doc View Source IsToggled(Keys) Determines whether a key is toggled. Declaration public static bool IsToggled(Keys key) Parameters Type Name Description Keys key A virtual key. Returns Type Description Boolean true if the virtual key is toggled; otherwise, false . | Improve this Doc View Source IsUp(Keys) Determines whether a key is not pressed or toggled. Declaration public static bool IsUp(Keys key) Parameters Type Name Description Keys key A virtual key. Returns Type Description Boolean true if the virtual key is not pressed or toggled; otherwise, false . | Improve this Doc View Source WasPressed(Keys) Determines whether a key was pressed. Declaration public static bool WasPressed(Keys key) Parameters Type Name Description Keys key A virtual key. Returns Type Description Boolean true if the virtual key was pressed; otherwise, false ."
  },
  "api/InputManager.InputGenerator.Mouse.html": {
    "href": "api/InputManager.InputGenerator.Mouse.html",
    "title": "Class InputGenerator.Mouse | InputManager.Net Documentation",
    "keywords": "Class InputGenerator.Mouse Synthesizes mouse events. Inheritance Object InputGenerator.Mouse Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : InputManager Assembly : InputManager.dll Syntax public static class Mouse Methods | Improve this Doc View Source Move(Int32, Int32, Boolean, Boolean) Moves the mouse to a specific coordinate on the screen or relative by an amount of pixels. Declaration public static bool Move(int x, int y, bool relative = false, bool useMouseEvent = false) Parameters Type Name Description Int32 x The absolute x-coordinate of the mouse or a relative amount of pixels. Int32 y The absolute y-coordinate of the mouse or a relative amount of pixels. Boolean relative Determines whether the coordinates are absolute. Boolean useMouseEvent Determines whether to use the mouse_event API or not. Returns Type Description Boolean Returns true on success. | Improve this Doc View Source MoveAsync(Int32, Int32, Boolean, Boolean) Moves the mouse to a specific coordinate on the screen or relative by an amount of pixels and returns immediately. Declaration public static Task<bool> MoveAsync(int x, int y, bool relative = false, bool useMouseEvent = false) Parameters Type Name Description Int32 x The absolute x-coordinate of the mouse or a relative amount of pixels. Int32 y The absolute y-coordinate of the mouse or a relative amount of pixels. Boolean relative Determines whether the coordinates are absolute. Boolean useMouseEvent Determines whether to use the mouse_event API or not. Returns Type Description Task < Boolean > Returns a Task . | Improve this Doc View Source Press(Keys, Boolean) Presses a button on the mouse. Declaration public static bool Press(Keys key, bool useMouseEvent = false) Parameters Type Name Description Keys key The mouse button to press. Boolean useMouseEvent Determines whether to use the mouse_event API or not. Returns Type Description Boolean Returns true on success. | Improve this Doc View Source Press(Keys, KeyStates, Boolean) Presses a button on the mouse. Declaration public static bool Press(Keys key, KeyStates state, bool useMouseEvent = false) Parameters Type Name Description Keys key The mouse button to press. KeyStates state The new state of the mouse button. Boolean useMouseEvent Determines whether to use the mouse_event API or not. Returns Type Description Boolean Returns true on success. | Improve this Doc View Source PressAsync(Keys, Boolean) Presses a button on the mouse and returns immediately. Declaration public static Task<bool> PressAsync(Keys key, bool useMouseEvent = false) Parameters Type Name Description Keys key The mouse button to press. Boolean useMouseEvent Determines whether to use the mouse_event API or not. Returns Type Description Task < Boolean > Returns a Task . | Improve this Doc View Source PressAsync(Keys, KeyStates, Boolean) Presses a button on the mouse and returns immediately. Declaration public static Task<bool> PressAsync(Keys key, KeyStates state, bool useMouseEvent = false) Parameters Type Name Description Keys key The mouse button to press. KeyStates state The new state of the mouse button. Boolean useMouseEvent Determines whether to use the mouse_event API or not. Returns Type Description Task < Boolean > Returns a Task ."
  },
  "api/InputManager.InputGenerator.Window.html": {
    "href": "api/InputManager.InputGenerator.Window.html",
    "title": "Class InputGenerator.Window | InputManager.Net Documentation",
    "keywords": "Class InputGenerator.Window Synthesizes mouse and keyboard events for a window or control. Inheritance Object InputGenerator.Window Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : InputManager Assembly : InputManager.dll Syntax public static class Window Methods | Improve this Doc View Source MoveMouse(IntPtr, Int32, Int32, Boolean) Moves the mouse relative to the window. PostMessage alows async execution and returns immediately. Declaration public static bool MoveMouse(IntPtr windowHandle, int x, int y, bool usePostMessage = false) Parameters Type Name Description IntPtr windowHandle The handle of a Window or Control. Int32 x The new x-coordinate of the mouse. Int32 y The new y-coordinate of the mouse. Boolean usePostMessage Determines whether to use the PostMessage API or not. Returns Type Description Boolean Returns true on success. | Improve this Doc View Source PressKey(IntPtr, Keys, Boolean) Presses a key (mouse or keyboard) inside a window or control. PostMessage alows async execution and returns immediately. Declaration public static bool PressKey(IntPtr windowHandle, Keys key, bool usePostMessage = false) Parameters Type Name Description IntPtr windowHandle The handle of a Window or Control. Keys key The key to press. Boolean usePostMessage Determines whether to use the PostMessage API or not. Returns Type Description Boolean Returns true on success. | Improve this Doc View Source PressKey(IntPtr, Keys, KeyStates, Boolean) Presses a key (mouse or keyboard) inside a window or control. PostMessage alows async execution and returns immediately. Declaration public static bool PressKey(IntPtr windowHandle, Keys key, KeyStates state, bool usePostMessage = false) Parameters Type Name Description IntPtr windowHandle The handle of a Window or Control. Keys key The key. KeyStates state The state of the given key. Boolean usePostMessage Determines whether to use the PostMessage API or not. Returns Type Description Boolean Returns true on success."
  },
  "api/InputManager.InputGenerator.Keyboard.html": {
    "href": "api/InputManager.InputGenerator.Keyboard.html",
    "title": "Class InputGenerator.Keyboard | InputManager.Net Documentation",
    "keywords": "Class InputGenerator.Keyboard Synthesizes keyboard events. Inheritance Object InputGenerator.Keyboard Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : InputManager Assembly : InputManager.dll Syntax public static class Keyboard Methods | Improve this Doc View Source Press(Keys, Boolean) Presses a key on the Keyboard. Declaration public static bool Press(Keys key, bool useKeyboardEvent = false) Parameters Type Name Description Keys key The key to press. Boolean useKeyboardEvent Determines whether to use the keyboard_event API or not. Returns Type Description Boolean Returns true on success. | Improve this Doc View Source Press(Keys, KeyStates, Boolean) Changes the state of a key on the Keyboard. Declaration public static bool Press(Keys key, KeyStates state, bool useKeyboardEvent = false) Parameters Type Name Description Keys key The key. KeyStates state The new state of the given key. Boolean useKeyboardEvent Determines whether to use the keyboard_event API or not. Returns Type Description Boolean Returns true on success. | Improve this Doc View Source PressAsync(Keys, Boolean) Presses a key on the Keyboard and immediately returns. Declaration public static Task<bool> PressAsync(Keys key, bool useKeyboardEvent = false) Parameters Type Name Description Keys key The key to press. Boolean useKeyboardEvent Determines whether to use the keyboard_event API or not. Returns Type Description Task < Boolean > Returns a Task . | Improve this Doc View Source PressAsync(Keys, KeyStates, Boolean) Changes the state of a key on the Keyboard and immediately returns. Declaration public static Task<bool> PressAsync(Keys key, KeyStates state, bool useKeyboardEvent = false) Parameters Type Name Description Keys key The key. KeyStates state The new state of the given key. Boolean useKeyboardEvent Determines whether to use the keyboard_event API or not. Returns Type Description Task < Boolean > Returns a Task ."
  },
  "api/InputManager.KeyStatesConverter.html": {
    "href": "api/InputManager.KeyStatesConverter.html",
    "title": "Class KeyStatesConverter | InputManager.Net Documentation",
    "keywords": "Class KeyStatesConverter Provides methods for converting KeyStates to strings and vice versa. Inheritance Object KeyStatesConverter Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : InputManager Assembly : InputManager.dll Syntax public static class KeyStatesConverter Properties | Improve this Doc View Source KeyStates Gets a readonly enumeration of all KeyStates. Declaration public static IEnumerable<KeyStates> KeyStates { get; } Property Value Type Description IEnumerable < KeyStates > Methods | Improve this Doc View Source FromString(String) Converts the string representation of a KeyStates enum value to a KeyStates enum value. Declaration public static KeyStates FromString(string value) Parameters Type Name Description String value The string representation of a KeyStates enum value. Returns Type Description KeyStates A KeyStates enum value. | Improve this Doc View Source ToInt(KeyStates) Converts a KeyStates enum value to a signed int. Declaration public static int ToInt(KeyStates state) Parameters Type Name Description KeyStates state A KeyStates enum value. Returns Type Description Int32 The signed int this method returns. | Improve this Doc View Source ToString(KeyStates) Converts a KeyStates enum value to a human readable string. Declaration public static string ToString(KeyStates state) Parameters Type Name Description KeyStates state A KeyStates enum value. Returns Type Description String The string this method generates."
  },
  "api/InputManager.InputGenerator.html": {
    "href": "api/InputManager.InputGenerator.html",
    "title": "Class InputGenerator | InputManager.Net Documentation",
    "keywords": "Class InputGenerator Synthesizes custom mouse, keyboard and window input. Inheritance Object InputGenerator Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : InputManager Assembly : InputManager.dll Syntax public static class InputGenerator"
  },
  "api/InputManager.html": {
    "href": "api/InputManager.html",
    "title": "Namespace InputManager | InputManager.Net Documentation",
    "keywords": "Namespace InputManager Classes AsyncInput Provides methods to get the asynchronous state of a virtual key. InputGenerator Synthesizes custom mouse, keyboard and window input. InputGenerator.Keyboard Synthesizes keyboard events. InputGenerator.Mouse Synthesizes mouse events. InputGenerator.Window Synthesizes mouse and keyboard events for a window or control. KeyboardState Provides access to the asynchronous status of all virtual keys. KeyCodeConverter Provides methods to convert between strings and enums and aswell Windows Forms (Keys) and WPF (Key) enums. KeyStatesConverter Provides methods for converting KeyStates to strings and vice versa."
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Add your introductions here! | InputManager.Net Documentation",
    "keywords": "Add your introductions here!"
  },
  "index.html": {
    "href": "index.html",
    "title": "InputManager.Net | InputManager.Net Documentation",
    "keywords": "InputManager.Net What is InputManager.Net? This library provides an easy to use interface forthe native GetAsyncKeyState , GetKeyState and GetKeyboardState API and aswell synthesizes keyboard and mouse input. Installation You can install this library using the NuGet Package Manager. Install-Package InputManager.Net Where to start? You can find all relevant classes in our api documentation. API Reference Additional Resources GitHub NuGet Donate Do you like this project and want to help me to keep working on it? I appreciate any donation that helps me to continue working on OSS like this. BTC 14ES7f4GB3vD1C8Faz6ywqTcdDevxZoMyY ETH 0xd9E2CB12d310E7BF5E72F591D7A2b8820adced04"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "Reference | InputManager.Net Documentation",
    "keywords": "Reference This is where you find documentation for all members and objects in InputManager.Net."
  }
}